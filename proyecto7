/* Codigo de arduino que permite escribir un numero de tres cifras en tres visores de 7 segmentos. El valor de cada una de las cifra se podrá determinar con un potenciómetro y utilizando un botón se varia que cifra se modifica.
*/

int boton = 2;
int dig1 = 3;  //primer digito
int dig2 = 4;  //segundo digito
int dig3 = 5;  //tercer digito
int salidas[] = {6,8,12,10,9,7,13,11}; //ABCDEFG DP

/* Definimos la variable paso que ira de 0 a 4(total_pasos) indicando que digito del visor se esta modificando en dicho momento.
Las variables a,b y c indican que valor numerico sera mostrado en el visor.
*/
int paso = 0;
int a =0;
int b =0;
int c =0;
int total_pasos = 4;

/*luces sera una lista de listas donde para indice indicara que luces prenderse (1) y cuales no (0).
*/
byte luces[10][8] =            { { 1,1,1,1,1,1,0,0 },  // = 0
                                 { 0,1,1,0,0,0,0,0 },  // = 1
                                 { 1,1,0,1,1,0,1,0 },  // = 2
                                 { 1,1,1,1,0,0,1,0 },  // = 3
                                 { 0,1,1,0,0,1,1,0 },  // = 4
                                 { 1,0,1,1,0,1,1,0 },  // = 5
                                 { 1,0,1,1,1,1,1,0 },  // = 6
                                 { 1,1,1,0,0,0,0,0 },  // = 7
                                 { 1,1,1,1,1,1,1,0 },  // = 8
                                 { 1,1,1,0,0,1,1,0 }   // = 9
                                 };


int buttonState;             // the current reading from the input pin
int lastButtonState = LOW;   // the previous reading from the input pin
long lastDebounceTime = 0;  // the last time the output pin was toggled
long debounceDelay = 50;

// the setup routine runs once when you press reset:
void setup() {
  // initialize serial communication at 9600 bits per second:
  Serial.begin(9600);
  for(int i=3;i<=13;i++){
    pinMode(i, OUTPUT);   // todas las salidas utilizadas para prender el visor
  }
  pinMode(boton, INPUT);  // la entrada correspondiente al boton
}

// the loop routine runs over and over again forever:
void loop() {
  
   int reading = digitalRead(boton);

  // check to see if you just pressed the button
  // (i.e. the input went from LOW to HIGH),  and you've waited
  // long enough since the last press to ignore any noise:

  // If the switch changed, due to noise or pressing:
  if (reading != lastButtonState) {
    // reset the debouncing timer
    lastDebounceTime = millis();
  }

  if ((millis() - lastDebounceTime) > debounceDelay) {
    // whatever the reading is at, it's been there for longer
    // than the debounce delay, so take it as the actual current state:

    // if the button state has changed:
    if (reading != buttonState) {
      buttonState = reading;

      // only toggle the LED if the new button state is HIGH
      if (buttonState == HIGH) {
        paso =(paso+1)%total_pasos;
      }
    }
  }

  // set the LED:
  //digitalWrite(ledPin, ledState);

  // save the reading.  Next time through the loop,
  // it'll be the lastButtonState:
  lastButtonState = reading;

  int sensorValue = analogRead(A0);
  float numeros = sensorValue / 110;  //Se divide por 110 para que números sea un numeros entre 0 y 9.
  int numero = int(numeros);
  Serial.println(numero);  

  switch(paso){  //dependiendo del paso, modificaremos "a","b" o "c" igualandola al numero.
    case 0:
     a=0;
      b=0;
      c=0;
      a = numero;
    break;
    case 1:
      b = numero;
    break;
    case 2:
      c = numero;
    break;
    case 3:
      Serial.println("listo");  //en este ultimo caso, queremos no se pueda modificar ni a,b o c al mover el potenciometro.
     
    break;
    }


    
  digitalWrite(dig1, HIGH);
  
  // read the input on analog pin 0:
 
  // en los siguientes loops se determina el valor de los output que prenderan las luces para a,b y c.
  for (int i=0;i<=7;i++){   
    if (luces[a][i]){
      digitalWrite(salidas[i], HIGH);
    } else {
      digitalWrite(salidas[i], LOW);
    }
  }

  delay(5);
  digitalWrite(dig1, LOW);
  digitalWrite(dig2, HIGH);
  
  // read the input on analog pin 0:
 
  
  for (int i=0;i<=7;i++){
    if (luces[b][i]){
      digitalWrite(salidas[i], HIGH);
    } else {
      digitalWrite(salidas[i], LOW);
    }
  }

  delay(5);
  digitalWrite(dig2, LOW);
  digitalWrite(dig3, HIGH);
  
  // read the input on analog pin 0:
 
  
  for (int i=0;i<=7;i++){
    if (luces[c][i]){
      digitalWrite(salidas[i], HIGH);
    } else {
      digitalWrite(salidas[i], LOW);
    }
  }
  delay(5);
      digitalWrite(dig3, LOW);
}
